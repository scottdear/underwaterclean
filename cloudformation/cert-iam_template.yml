AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: >
  IAM ROLE for Lamda to auto-rotate Let's Encrypt ssl certificates

###############################################################################
Parameters:
###############################################################################
  Region:
    Type: String
    Description: The Region To Deploy To
  AWSAccount:
    Type: String
    Description: The account ID this will be deployed in
    Type: String     
  PrivateBucket:
    Type: String
    Description: The Bucket to hold our certificate
  CertLambdaRoleName:
    Type: String
    Description: The name to use for the Lambda Role
  

###############################################################################
Resources:
###############################################################################

  CertUpdateLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref CertLambdaRoleName
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
            - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
      Policies:
        - PolicyName: cert-lambda-create-loggroup
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
            - Effect: Allow
              Action:
                - "logs:CreateLogGroup"
              Resource: !Sub "arn:aws:logs:${Region}:${AWSAccount}:*"
        - PolicyName: cert-lambda-put-logs
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
            - Effect: Allow
              Action:
                - "logs:PutLogEvents"
                - "logs:CreateLogStream"
              Resource: 
                 - "arn:aws:logs:*:*:*"
 
        - PolicyName: cert-lambda-global
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
            - Effect: Allow
              Action:
                - "acm:ListCertificates"
                - "cloudwatch:PutMetricData"
                - "acm:ImportCertificate"
                - "acm:DescribeCertificate"
              Resource: "*"
        - PolicyName: cert-lambda-route53
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
            - Effect: Allow
              Action:
                - "route53:ListHostedZones"
              Resource:
              - "arn:aws:route53:::hostedzone/*"
              - "arn:aws:route53:::change/*"
        - PolicyName: cert-lambda-sns
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
            - Effect: Allow
              Action:
                - "sns:Publish"
              Resource:
                - !Sub "arn:aws:sns:${Region}:${AWSAccount}:*"
        - PolicyName: cert-lambda-private-s3
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
            - Effect: Allow
              Action:
                - "s3:GetObject"
                - "s3:ListBucket"
                - "s3:PutObject"
                - "s3:DeleteObject"
              Resource:
                - !Sub "arn:aws:s3:::${PrivateBucket}"

###############################################################################
Outputs:
###############################################################################
  CertUpdateLambdaRoleOutput:
    Description: A Reference to the Lambda Role to use to update certs
    Value: !Ref CertUpdateLambdaRole
    Export:
      Name: !Sub "${AWS::StackName}-Name"
  CertUpdateLamdaRoleARN:
    Description: The arn of the ETLRole
    Value: {"Fn::GetAtt" : [ "CertUpdateLambdaRole", "Arn" ] }
    Export:
      Name: !Sub "${AWS::StackName}-ARN"
  